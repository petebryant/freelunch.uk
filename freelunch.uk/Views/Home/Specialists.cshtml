@model freelunch.uk.Models.SpecialistsViewModel
@{
     string locations = "";
     ViewBag.Title = "Specialists";
}

<div>
    <h2><i class="fa fa-users" aria-hidden="true"></i> Specialists.</h2>

    <div class="row">
        <div class="col-md-6">
            Find a specialist...
        </div>
        @using (Html.BeginForm("SearchSpecialists", "Home", FormMethod.Post, new { id = "searchSpecialistsForm" }))
        {
            @Html.AntiForgeryToken()
            <div class="input-group col-md-6">
                @Html.TextBoxFor(s => s.Search, new { @class = "form-control pull-right", @placeholder="Search for... "})
                <span class="input-group-btn">
                    <button class="btn btn-default" type="submit">
                        <span class="glyphicon glyphicon-search" aria-hidden="true"></span>
                    </button>
                </span>
            </div>
        }
    </div>
</div>

<p class="text-success">@ViewBag.StatusMessage</p>
<hr />

@if (!Request.IsAuthenticated) 
{ 
    <p class="text-success">You need to be a registered user and signed in to contact any of our specialists.</p>
}

@foreach (var specialist in Model.Specialists)
{
    string contactSpecialist = "contactSpecialist" + specialist.UserId;
    
    <div class="panel panel-default">
        <div class="panel-heading">
            <h3 class="panel-title">
                @Html.Encode(specialist.Name) 
            </h3>
        </div>
        <div class="panel-body">
            <div class="col-md-6">
                <dl class="dl-horizontal">

                    <dt>@Html.DisplayNameFor(s => s.DummySpecialist.Description)</dt>
                    <dd>@Html.Encode(specialist.Description)</dd>


                    @foreach (var location in specialist.Locations)
                {
                    if (!string.IsNullOrEmpty(locations))
                    {
                        locations += ", ";
                    }

                    locations += location.Name;
                }

                    <dt>@Html.DisplayNameFor(s => s.DummyLocation.Name)</dt>
                    <dd>@Html.Encode(locations)</dd>


                    @foreach (var link in specialist.Links)
                {
                    string iClass = "";

                    switch (link.LinkType)
                    {
                        case freelunch.uk.Models.LinkType.Facebook:
                            iClass = "fa fa-facebook";
                            break;
                        case freelunch.uk.Models.LinkType.LinkedIn:
                            iClass = "fa fa-linkedin";
                            break;
                        case freelunch.uk.Models.LinkType.Twitter:
                            iClass = "fa fa-twitter";
                            break;
                        default:
                            iClass = "fa fa-book";
                            break;
                    }

                        <dd>
                            <br />
                            <i class="fa @iClass" aria-hidden="true"></i>
                            <a href="@Html.Encode(link.URL)" style="text-decoration: none" title="@Html.Encode(link.Text)" target="_blank"> @Html.Encode(link.Text)</a>
                        </dd>
                }
                </dl>
                @if (Request.IsAuthenticated)
                {
                    <button type="button" class="btn btn-default" data-toggle="modal" data-target="#@contactSpecialist">
                        <span class="fa fa-envelope" aria-hidden="true"></span> Contact
                    </button>
                }
            </div>
            <div class="col-md-6 bg-primary">
                @foreach (var specialism in specialist.Specialisms)
                {
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <h3 class="panel-title">@Html.Encode(specialism.Subject)</h3>
                        </div>
                        <div class="panel-body">
                            @Html.Encode(specialism.Description)
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>

   if (Request.IsAuthenticated)
    {
        <div id="@contactSpecialist" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close close-button" data-dismiss="modal">
                        <span class="glyphicon glyphicon-remove-sign" aria-hidden="true"></span>
                    </button>
                    <h4 class="modal-title">Contact</h4>
                </div>
                <p></p>
                <section id="editForm">
                    @using (Html.BeginForm("ContactSpecialist", "Home", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                    {
                        <div class="modal-body">
                            @Html.AntiForgeryToken()

                            <dl class="dl-horizontal">
                                <dt>@Html.DisplayNameFor(s => s.DummySpecialist.Name)</dt>
                                <dd>@Html.Encode(specialist.Name)</dd>
                                <dt>@Html.DisplayNameFor(s => s.DummySpecialist.Description)</dt>
                                <dd>@Html.Encode(specialist.Description)</dd>
                            </dl>

                            <div class="anti-spam">
                                @Html.TextBoxFor(s => s.URL)
                                @Html.TextBoxFor(s => s.Search)
                                @Html.Hidden(specialist.UserId)
                            </div>

                            <hr />
                            <div class="form-group">
                                @Html.LabelFor(s => s.Sender, new { @class = "col-md-3 col-md-offset-1 control-label" })
                                <div class="col-md-7">
                                    @Html.TextBoxFor(s => s.Sender, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(s => s.Sender, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="help-tip">
                                <p>The details you provide here will be passed on to the selected specialist.</p>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(s => s.Email, new { @class = "col-md-3 col-md-offset-1 control-label" })
                                <div class="col-md-7">
                                    @Html.TextBoxFor(s => s.Email, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(s => s.Email, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(s => s.Message, new { @class = "col-md-3 col-md-offset-1 control-label" })
                                <div class="col-md-7">
                                    @Html.TextAreaFor(s => s.Message, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(s => s.Message, "", new { @class = "text-danger" })
                                    <span class="help-block">Provide a description of what you are proposing.</span>
                                </div>
                            </div>

                            <div class="modal-footer">
                                <button type="submit" class="btn btn-default">
                                    <span class="fa fa-envelope" aria-hidden="true"></span>  Send
                                </button>
                                <button type="button" class="btn btn-default" data-dismiss="modal">
                                    <span class="glyphicon glyphicon-remove-sign" aria-hidden="true"></span> Cancel
                                </button>
                            </div>
                        </div>
                    }
                </section>
            </div>
        </div>
    </div>
    }
}






