@model freelunch.uk.Models.LunchesViewModel
@{
    string topics = "";
}
<div class="well well-lg">
    <h2><i class="fa fa-cutlery" aria-hidden="true"></i> Lunch.</h2>

    <div class="row">
        <div class="col-md-6">
            Find a lunch...
        </div>

        @using (Html.BeginForm("SearchLunch", "Home", FormMethod.Post, new { id = "searchLunchForm" }))
        {
            @Html.AntiForgeryToken()
            <div class="input-group col-md-6">
                @Html.TextBoxFor(s => s.Search, new { @class = "form-control pull-right", @placeholder = "Search for... " })
                <span class="input-group-btn">
                    <button class="btn btn-default" type="submit">
                        <span class="glyphicon glyphicon-search" aria-hidden="true"></span>
                    </button>
                </span>
            </div>
        }
    </div>
</div>

<p class="text-success">@ViewBag.StatusMessage</p>

@if (!Request.IsAuthenticated)
{
    <p class="text-success">You need to be a registered user and signed in to express your interest in a lunch.</p>
}

@foreach (var lunch in Model.Lunches)
{
    string contactLunch = "contactLunch" + lunch.UserId;

    <div class="panel panel-default">
        <div class="panel-heading">
            <h3 class="panel-title">
                @Html.Encode(lunch.Name)

                @if (Request.IsAuthenticated)
                {
                    <button type="button" class="btn btn-default" data-toggle="modal" data-target="#@contactLunch">
                        <span class="fa fa-envelope" aria-hidden="true"></span> Contact
                    </button>
                }
            </h3>
        </div>
        <div class="panel-body">
            <div class="row">
                <div class="col-md-6">
                    <dl class="dl-horizontal">

                        <dt>@Html.DisplayNameFor(l => l.DummyLunch.Website)</dt>
                        <dd>@Html.Encode(lunch.Website)</dd>

                        <dt>@Html.DisplayNameFor(l => l.DummyLunch.ContactName)</dt>
                        <dd>@Html.Encode(lunch.ContactName)</dd>
                    </dl>
                </div>
                <div class="col-md-6">
                    <dl class="dl-horizontal">
                        @foreach (var topic in lunch.Topics)
                        {
                            if (!string.IsNullOrEmpty(topics))
                            {
                                topics += ", ";
                            }

                            topics += topic.Name;
                        }

                        @{                          
                            topics = "SOLID, C#, Clean Code";
                        }

                        <dt>@Html.DisplayNameFor(s => s.DummyTopic.Name)</dt>
                        <dd>@Html.Encode(topics)</dd>

                        <dt>@Html.DisplayNameFor(l => l.DummyLunch.Audience)</dt>
                        <dd>@Html.Encode(lunch.Audience)</dd>
                        <dt>@Html.DisplayNameFor(l => l.DummyLunch.AudienceNumber)</dt>
                        <dd>@Html.Encode(lunch.AudienceNumber)</dd>
                    </dl>

                </div>
            </div>
        </div>
    </div>
}