@model freelunch.uk.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
}

<h2>@ViewBag.Title.</h2>

@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <h4>Create a new account.</h4>
    <hr />
    @Html.ValidationSummary("", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        <h5>I am happy to receive information from...</h5>
        @{
        var mflAttrib = Model.Preferences.ReceiveMFLMailing ?
            (object)new { @class = "", @checked = "checked" } :
            (object)new { @class = "" };
        }
        @Html.CheckBoxFor(m => m.Preferences.ReceiveMFLMailing, mflAttrib)
        @Html.LabelFor(m => m.Preferences.ReceiveMFLMailing, new { @class = "control-label" })
    </div>
    
    <div class="form-group">
        @{
        var partAttrib = Model.Preferences.ReceivePartnerMailing ?
            (object)new { @class = "", @checked = "checked" } :
            (object)new { @class = "" };
        }
        @Html.CheckBoxFor(m => m.Preferences.ReceivePartnerMailing, partAttrib)
        @Html.LabelFor(m => m.Preferences.ReceivePartnerMailing)
    </div>
    <div class="form-group">
        @Html.CheckBoxFor(m => m.TermsAndConditions)
        I accept the @Html.ActionLink("terms", "Terms", "Home", null, new  { @target="_blank"}) and conditions
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <button type="submit" class="btn btn-default">
                <span class="glyphicon glyphicon-book" aria-hidden="true"></span>  Register
            </button>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

